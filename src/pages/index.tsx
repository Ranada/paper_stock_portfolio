import { type NextPage } from "next";
import Head from "next/head";
// import Link from "next/link";

import { signIn, signOut, useSession } from "next-auth/react";

import { api } from "~/utils/api";

// Components
import Table from "./components/Table";
import Form from "./components/Form";

const Home: NextPage = () => {
  const hello = api.example.hello.useQuery({ text: "Checkout and rate other paper stock portfolios." });
  const stockInfo = api.example.getStockInfo.useQuery({text: 'abnb'});

  return (
    <>
      <Head>
        <title>Paper Stock Portfolio</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#004e92] to-[#000428]">
        <div className="container flex w-2/3 flex-col items-center justify-left gap-12 px-4 py-16 ">
          <h1 className="text-left text-5xl font-extrabold tracking-tight text-white sm:text-[5rem]">
            Paper Stock Portfolio
          </h1>
          <div className="w-full rounded-xl bg-white/10 p-4">
            <Table />
          </div>
          <div className="flex flex-col items-center gap-2">
            <div className="mb-8">
            <Form />
              <p className="text-lg text-white">
                Ticker:{" "}
                {stockInfo.data
                  ? stockInfo.data.company.symbol
                  : "Searching for stock..."}
              </p>
              <p className="text-lg text-white">
                Company:{" "}
                {stockInfo.data
                  ? stockInfo.data.company.name
                  : "Searching for stock..."}
              </p>
              <p className="text-lg text-white">
                Asset Type:{" "}
                {stockInfo.data
                  ? stockInfo.data.company.assetType
                  : "Searching for stock..."}
              </p>
              <p className="text-lg text-white">
                Market cap:{" "}
                {stockInfo.data
                  ? `$ ${stockInfo.data.company.marketCap} B`
                  : "Searching for stock..."}
              </p>
              <p className="text-lg text-white">
                Description:{" "}
                {stockInfo.data
                  ? stockInfo.data.company.description
                  : "Searching for stock..."}
              </p>
              {/* <p className="text-lg text-white">
                Closing price:{" "}
                {stockInfo.data
                  ? stockInfo.data.closingPrice
                  : "Searching for stock..."}
              </p> */}
            </div>
            <div>
              <p className="text-2xl text-white">
                {hello.data ? hello.data.greeting : "Loading tRPC query..."}
              </p>
            </div>
            <AuthShowcase />
          </div>
        </div>
      </main>
    </>
  );
};

export default Home;

const AuthShowcase: React.FC = () => {
  const { data: sessionData } = useSession();

  const { data: secretMessage } = api.example.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined },
  );

  return (
    <div className="flex flex-col items-center justify-center gap-4">
      <p className="text-center text-2xl text-white">
        {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
        {secretMessage && <span> - {secretMessage}</span>}
      </p>
      <button
        className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
        onClick={sessionData ? () => void signOut() : () => void signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>
    </div>
  );
};